/* Function */
@function size($size) {
  @if ($size == 'xl') {
    @return 2.5;
  } @else if($size == 'l') {
    @return 1.75;
  } @else if($size == 'm') {
    @return 1.5;
  } @else if($size == 's') {
    @return 1;
  } @else if($size == 'xs') {
    @return 0.75;
  }
}

/* Mixin */
@mixin neon($size, $color) {
  border-radius: 12px;
  border: 3px solid $color;
  filter: brightness(120%);
  box-shadow:
    // glass tube inside
    inset 0 0 0 2px rgba(0, 0, 0, 0.2),
    // glass tube outside
    0 0 0 2px rgba(0, 0, 0, 0.2),
    // glow inside
    inset 0 0 $size $color,
    // glow outside
    0 0 $size $color;
}

/* Variables */
$neonColor: (
  redColor: #ff1177,
  brightOrangeColor: #f8b734,
  orangeColor: #ff9900,
  bananaColor: #f5e3a7,
  yellowColor: #ffdd1b,
  greenColor: #a2ff37,
  skyColor: #b7e7f7,
  blueColor: #3b8de4,
  violetColor: #e785d2,
  purpleColor: #ad0096,
  silverColor: #c4c4c6,
  whiteColor: #bbbbbb,
  blackColor: darken(#202020, 5%),
);
$neonSize: ('xl', 'l', 'm', 's', 'xs');

/* Selector */
.CompDivNeon {
  @each $name, $color in $neonColor {
    @each $size in $neonSize {
      &.#{$name}.#{$size} {
        @include neon(calc(16px * #{size($size)}), $color);
      }
    }
  }
}
